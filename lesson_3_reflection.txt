When would you want to use a remote repository rather than keeping all your work
local?

    You would use a remote repository rather than keeping all your work local when
    you will be working on more than one system, or when you will be colaborating
    a repository with others.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You might want to always pull changes manually rather than having Git 
    automatically stay up-to-date with a remote repository becuase you would want
    control of exaclty which files to pull from, expecially in a colaborated 
    environment.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    The differences betwen forks, clones, and branches is that a fork clones into
    your perosnal repository on GitHub.com. A clone is a copy of a repository
    unto your device. And a branch is a copy of a repository, but without affecting
    the head of the repository of which it was copied from.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefit of having a copy of the last known state of the remote stored 
    locally is to be able to work offline, or in the event you are working 
    collaboratly

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would collaborate without using Git or GitHub by creating folders on a server
    which everyone in a team would have access to, and by sending email notifications
    to various users regarding any changes on the server. Working without a CMS 
    always harder than working with one, like GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    You would want to make chages in a speratate branch rathe than directly in 
    master when you have an idea/concept that needss to be developed and debugged.
    This approach has the benefit that the master won't be altered, while the 
    idea/concept is finalized, if ever.
